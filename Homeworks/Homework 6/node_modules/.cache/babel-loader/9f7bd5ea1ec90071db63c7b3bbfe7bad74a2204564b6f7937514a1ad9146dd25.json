{"ast":null,"code":"class CustomNavigation extends HTMLElement {\n  connectedCallback() {\n    this.innerHTML = `<div class=\"elements\"></div>` + this.innerHTML;\n  }\n}\ncustomElements.define(\"c-sayfalama\", CustomNavigation);\nconst navigationLoaded = function () {\n  let pageSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  let currPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const paginationNumbers = document.querySelector(\"c-sayfalama .paginationNumbers\");\n  const paginatedList = document.querySelector(\"c-sayfalama>.elements\");\n  const listItems = [...paginatedList.children];\n  const pageCount = Math.ceil(listItems.length / pageSize);\n  paginationNumbers.innerHTML = ``;\n  const addPageNo = index => {\n    const pageNumber = document.createElement('div');\n    pageNumber.className = \"paginationNumber\";\n    pageNumber.innerHTML = index.toString();\n    pageNumber.setAttribute(\"page-index\", index);\n    paginationNumbers.appendChild(pageNumber);\n  };\n  const getPaginationNumbers = () => {\n    for (let i = 1; i <= pageCount; i++) {\n      addPageNo(i);\n    }\n  };\n  const handleActivePageNumber = () => {\n    document.querySelectorAll(\".paginationNumber\").forEach(button => {\n      button.classList.remove(\"active\");\n      const pageIndex = Number(button.getAttribute(\"page-index\"));\n      if (pageIndex == currPage) {\n        button.classList.add(\"active\");\n      }\n    });\n  };\n  const boldList = document.querySelectorAll(\".pageNo>.bold\");\n  const setCurrentPage = pageNum => {\n    currPage = pageNum > pageCount ? pageCount : pageNum;\n    boldList[0].innerHTML = listItems.length;\n    let bottom = (currPage - 1) * pageSize + 1;\n    bottom = listItems.length < bottom ? listItems.length : bottom;\n    let top = currPage * pageSize;\n    top = listItems.length < top ? listItems.length : top;\n    boldList[1].innerHTML = `${bottom}-${top}`;\n    handleActivePageNumber();\n    const prevRange = (currPage - 1) * pageSize;\n    const currRange = currPage * pageSize;\n    listItems.forEach((item, index) => {\n      item.classList.add(\"hidden\");\n      if (index >= prevRange && index < currRange) {\n        item.classList.remove(\"hidden\");\n      }\n    });\n  };\n  getPaginationNumbers();\n  setCurrentPage(currPage);\n  document.querySelectorAll(\".paginationNumber\").forEach(button => {\n    const pageIndex = Number(button.getAttribute(\"page-index\"));\n    if (pageIndex) {\n      button.addEventListener(\"click\", () => {\n        setCurrentPage(pageIndex);\n      });\n    }\n  });\n  const pageCounterChildren = document.querySelectorAll(\".pageCounter>*\");\n  pageCounterChildren.forEach(button => {\n    const count = button.innerHTML;\n    if (count === pageSize.toString()) {\n      button.classList.add(\"active\");\n    } else {\n      button.classList.remove(\"active\");\n    }\n    if (count) {\n      button.addEventListener(\"click\", () => {\n        navigationLoaded(count, currPage);\n      });\n    }\n  });\n};","map":{"version":3,"names":["CustomNavigation","HTMLElement","connectedCallback","innerHTML","customElements","define","navigationLoaded","pageSize","currPage","paginationNumbers","document","querySelector","paginatedList","listItems","children","pageCount","Math","ceil","length","addPageNo","index","pageNumber","createElement","className","toString","setAttribute","appendChild","getPaginationNumbers","i","handleActivePageNumber","querySelectorAll","forEach","button","classList","remove","pageIndex","Number","getAttribute","add","boldList","setCurrentPage","pageNum","bottom","top","prevRange","currRange","item","addEventListener","pageCounterChildren","count"],"sources":["/Users/ozturkomerfaruk/Desktop/project6/project6/src/c-sayfalama.js"],"sourcesContent":["\nclass CustomNavigation extends HTMLElement {\n    connectedCallback() {\n        this.innerHTML = `<div class=\"elements\"></div>` + this.innerHTML\n    }\n}\n\ncustomElements.define(\"c-sayfalama\", CustomNavigation)\n\nconst navigationLoaded = (pageSize = 10, currPage = 1) => {\n    const paginationNumbers = document.querySelector(\"c-sayfalama .paginationNumbers\")\n    const paginatedList = document.querySelector(\"c-sayfalama>.elements\")\n    const listItems = [...paginatedList.children]\n\n    const pageCount = Math.ceil(listItems.length / pageSize)\n    paginationNumbers.innerHTML = ``\n\n    const addPageNo = (index) => {\n        const pageNumber = document.createElement('div')\n        pageNumber.className = \"paginationNumber\"\n        pageNumber.innerHTML = index.toString()\n        pageNumber.setAttribute(\"page-index\", index)\n        paginationNumbers.appendChild(pageNumber)\n    };\n\n    const getPaginationNumbers = () => {\n        for (let i = 1; i <= pageCount; i++) {\n            addPageNo(i);\n        }\n    };\n\n    const handleActivePageNumber = () => {\n        document.querySelectorAll(\".paginationNumber\").forEach((button) => {\n            button.classList.remove(\"active\");\n            const pageIndex = Number(button.getAttribute(\"page-index\"));\n            if (pageIndex == currPage) {\n                button.classList.add(\"active\");\n            }\n        });\n    };\n    const boldList = document.querySelectorAll(\".pageNo>.bold\")\n\n    const setCurrentPage = (pageNum) => {\n        currPage = pageNum > pageCount ? pageCount : pageNum;\n\n        boldList[0].innerHTML = listItems.length\n\n        let bottom = (currPage - 1) * pageSize + 1\n        bottom = listItems.length < bottom ? listItems.length : bottom\n\n        let top = currPage * pageSize\n        top = listItems.length < top ? listItems.length : top\n\n        boldList[1].innerHTML = `${bottom}-${top}`\n        handleActivePageNumber();\n\n        const prevRange = (currPage - 1) * pageSize;\n        const currRange = currPage * pageSize;\n\n        listItems.forEach((item, index) => {\n            item.classList.add(\"hidden\");\n            if (index >= prevRange && index < currRange) {\n                item.classList.remove(\"hidden\");\n            }\n        });\n    };\n    getPaginationNumbers();\n    setCurrentPage(currPage);\n\n    document.querySelectorAll(\".paginationNumber\").forEach((button) => {\n        const pageIndex = Number(button.getAttribute(\"page-index\"));\n\n        if (pageIndex) {\n            button.addEventListener(\"click\", () => {\n                setCurrentPage(pageIndex);\n            });\n        }\n    });\n\n\n    const pageCounterChildren = document.querySelectorAll(\".pageCounter>*\")\n    pageCounterChildren.forEach((button) => {\n        const count = button.innerHTML;\n        if (count === pageSize.toString()) {\n            button.classList.add(\"active\")\n        } else {\n            button.classList.remove(\"active\")\n        }\n        if (count) {\n            button.addEventListener(\"click\", () => {\n                navigationLoaded(count, currPage)\n            });\n        }\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}